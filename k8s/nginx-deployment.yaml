apiVersion: apps/v1
kind: Deployment
metadata:
  name: snap-codex-nginx
  namespace: snap-codex
spec:
  replicas: 2
  selector:
    matchLabels:
      app: snap-codex-nginx
  template:
    metadata:
      labels:
        app: snap-codex-nginx
    spec:
      containers:
      - name: nginx
        image: snap-codex-nginx:latest
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          mkdir -p /tmp/nginx_cache
          cp /tmp/nginx/default.conf /etc/nginx/conf.d/default.conf
          envsubst '${DOMAIN_NAME} ${API_DOMAIN} ${API_SERVICE_NAME} ${API_PORT} ${METRICS_SERVICE_NAME} ${METRICS_PORT}' < /etc/nginx/conf.d/default.conf > /tmp/default.conf
          cp /tmp/default.conf /etc/nginx/conf.d/default.conf
          nginx -g 'daemon off;'
        volumeMounts:
        - name: nginx-config
          mountPath: /tmp/nginx
        - name: nginx-cache
          mountPath: /tmp/nginx_cache
        envFrom:
        - configMapRef:
            name: snap-codex-env-config
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: nginx-config
        configMap:
          name: snap-codex-nginx-config
      - name: nginx-cache
        emptyDir: {}
      - name: env-config
        configMap:
          name: snap-codex-env-config 