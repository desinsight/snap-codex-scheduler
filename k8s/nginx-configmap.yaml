apiVersion: v1
kind: ConfigMap
metadata:
  name: snap-codex-nginx-config
  namespace: snap-codex
data:
  default.conf: |
    # Cache settings
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
      listen 80;
      server_name localhost;
      root /usr/share/nginx/html;
      index index.html;

      # Security headers
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Content-Type-Options "nosniff";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' http://localhost";

      # Gzip compression
      gzip on;
      gzip_vary on;
      gzip_min_length 10240;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
      gzip_disable "MSIE [1-6]\.";

      # Cache key
      proxy_cache_key "$scheme$request_method$host$request_uri";
      proxy_cache_valid 200 302 10m;
      proxy_cache_valid 404 1m;

      location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
        proxy_cache my_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
      }

      location /static {
        expires 1y;
        add_header Cache-Control "public";
        proxy_cache my_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
      }

      location /api {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # API caching
        proxy_cache my_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
      }

      location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
      }

      location /metrics {
        access_log off;
        add_header Content-Type text/plain;
        proxy_pass http://localhost:9090/metrics;
      }

      # Error pages
      error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 /40x.html;
      error_page 500 501 502 503 504 505 506 507 508 510 511 /50x.html;
      
      location = /40x.html {
        root /usr/share/nginx/html;
        internal;
      }
      
      location = /50x.html {
        root /usr/share/nginx/html;
        internal;
      }
    } 