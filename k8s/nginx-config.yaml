apiVersion: v1
kind: ConfigMap
metadata:
  name: snap-codex-nginx-config
  namespace: snap-codex
data:
  default.conf: |
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      listen 443 ssl default_server;
      listen [::]:443 ssl default_server;
      
      server_name snap-codex.com localhost;
      
      ssl_certificate /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers HIGH:!aNULL:!MD5;
      
      root /usr/share/nginx/html;
      index index.html;

      # Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

      # Enable debug logging
      error_log /dev/stdout debug;
      access_log /dev/stdout combined;

      # Handle SPA routing
      location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0' always;
      }

      # Static assets handling
      location /assets/ {
        alias /usr/share/nginx/html/assets/;
        try_files $uri =404;
        expires off;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0' always;
      }

      # Health check endpoint
      location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
      }

      # Error pages
      error_page 404 /404.html;
      error_page 500 502 503 504 /50x.html;
      
      location = /50x.html {
        root /usr/share/nginx/html;
        internal;
      }
    } 